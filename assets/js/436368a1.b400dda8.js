"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[6309],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8197:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},s="Access Control",c={unversionedId:"admin-panel/AccessContol",id:"admin-panel/AccessContol",title:"Access Control",description:"This is implementation of permission system from OpenZepplin",source:"@site/docs/admin-panel/AccessContol.md",sourceDirName:"admin-panel",slug:"/admin-panel/AccessContol",permalink:"/docs/admin-panel/AccessContol",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Contract Manager",permalink:"/docs/admin-panel/ContractManager"},next:{title:"Staking",permalink:"/docs/admin-panel/Staking"}},p={},u=[{value:"Roles",id:"roles",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"access-control"},"Access Control"),(0,a.kt)("p",null,"This is implementation of permission system from ",(0,a.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/4.x/access-control#role-based-access-control"},"OpenZepplin")),(0,a.kt)("p",null,"In the process of deployment the ",(0,a.kt)("a",{parentName:"p",href:"/docs/admin-panel/ContractManager/"},"Contract Manager")," assigns required roles to new contracts, these roles could be added or removed on your decision."),(0,a.kt)("h2",{id:"roles"},"Roles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"DEFAULT_ADMIN_ROLE")," - this role is automatically assigned to contract deployer and allows to assign other roles"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"MINTER_ROLE")," - this role automatically assigned to ",(0,a.kt)("a",{parentName:"li",href:"/docs/category/marketplace/"},"Marketplace")," contract, so it could mint and sell new items"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"PAUSER_ROLE")," - this role allows to pause some contracts, for example pause ",(0,a.kt)("a",{parentName:"li",href:"/docs/marketplace/ERC721/airdrop/"},"Airdrop")," before it could be open"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"SNAPSHOT_ROLE")," - makes a snapshot of ",(0,a.kt)("a",{parentName:"li",href:"/docs/marketplace/ERC20/token/"},"ERC20")," owners"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"PREDICATE_ROLE")," - this role is specific to ",(0,a.kt)("a",{parentName:"li",href:"https://docs.polygon.technology/docs/develop/ethereum-polygon/mintable-assets/"},"Polygon network")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"DEPOSITOR_ROLE")," - this role is specific to ",(0,a.kt)("a",{parentName:"li",href:"https://docs.polygon.technology/docs/develop/ethereum-polygon/mintable-assets/"},"Polygon network"))))}d.isMDXComponent=!0}}]);